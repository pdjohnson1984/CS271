Microsoft (R) Macro Assembler Version 14.11.25508.2	    10/23/17 15:31:56
Program #3     (Program3.asm				     Page 1 - 1


				TITLE Program #3     (Program3.asm)

				; Author / Email: Marc Tibbs (tibbsm@oregonstate.edu)
				; Class / Project ID: CS271-400 / Program #3                 Due Date: 10/29/2017
				; Description:	This program accumulates the numbers the user inputs and returns the
				; number of valid numbers that were input, their sum, and rounded average.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 =-00000064			LOW_LIMIT = -100
 =-00000001			UP_LIMIT = -1

 00000000			.data
 00000000 49 6E 74 65 67	progTitle	BYTE	"Integer Accumulator (CS271-400 Program Assignment #3) ", 0
	   65 72 20 41 63
	   63 75 6D 75 6C
	   61 74 6F 72 20
	   28 43 53 32 37
	   31 2D 34 30 30
	   20 50 72 6F 67
	   72 61 6D 20 41
	   73 73 69 67 6E
	   6D 65 6E 74 20
	   23 33 29 20 00
 00000037 2A 2A 45 43 31	ec1			BYTE	"**EC1: Number the lines during user input. ", 0
	   3A 20 4E 75 6D
	   62 65 72 20 74
	   68 65 20 6C 69
	   6E 65 73 20 64
	   75 72 69 6E 67
	   20 75 73 65 72
	   20 69 6E 70 75
	   74 2E 20 00
 00000063 2A 2A 45 43 32	ec2			BYTE	"**EC2: Calculate and display the average as a floating-point number, rounded to the nearest .001.", 0
	   3A 20 43 61 6C
	   63 75 6C 61 74
	   65 20 61 6E 64
	   20 64 69 73 70
	   6C 61 79 20 74
	   68 65 20 61 76
	   65 72 61 67 65
	   20 61 73 20 61
	   20 66 6C 6F 61
	   74 69 6E 67 2D
	   70 6F 69 6E 74
	   20 6E 75 6D 62
	   65 72 2C 20 72
	   6F 75 6E 64 65
	   64 20 74 6F 20
	   74 68 65 20 6E
	   65 61 72 65 73
	   74 20 2E 30 30
	   31 2E 00
 000000C5 50 72 6F 67 72	studentInfo	BYTE	"Programmed by: Marc Tibbs (tibbsm@oregonstate.edu) ", 0
	   61 6D 6D 65 64
	   20 62 79 3A 20
	   4D 61 72 63 20
	   54 69 62 62 73
	   20 28 74 69 62
	   62 73 6D 40 6F
	   72 65 67 6F 6E
	   73 74 61 74 65
	   2E 65 64 75 29
	   20 00
 000000F9 57 68 61 74 27	prompt_1	BYTE	"What's your name? ", 0
	   73 20 79 6F 75
	   72 20 6E 61 6D
	   65 3F 20 00
 0000010C  00000021 [		userName	BYTE	33 DUP(0)
	    00
	   ]
 0000012D 48 65 6C 6C 6F	intro_1		BYTE	"Hello, ", 0
	   2C 20 00
 00000135 21 20 00		intro_2		BYTE	"! ", 0
 00000138 49 6E 73 74 72	progInst_1	BYTE	"Instructions: ", 0 
	   75 63 74 69 6F
	   6E 73 3A 20 00
 00000147 45 6E 74 65 72	progInst_2	BYTE	"Enter numbers in the range [-100, -1]. ", 0 
	   20 6E 75 6D 62
	   65 72 73 20 69
	   6E 20 74 68 65
	   20 72 61 6E 67
	   65 20 5B 2D 31
	   30 30 2C 20 2D
	   31 5D 2E 20 00
 0000016F 45 6E 74 65 72	progInst_3	BYTE	"Enter a non-negative number when you are finished to see their count, sum, and average. ", 0 
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 74 68 65
	   69 72 20 63 6F
	   75 6E 74 2C 20
	   73 75 6D 2C 20
	   61 6E 64 20 61
	   76 65 72 61 67
	   65 2E 20 00
 000001C8 2E 20 45 6E 74	progInst_4	BYTE	". Enter number: ", 0 
	   65 72 20 6E 75
	   6D 62 65 72 3A
	   20 00
 000001D9 4F 75 74 20 6F	outOfRange	BYTE	"Out of Range! Number must be in the range [-100, -1]. ", 0 
	   66 20 52 61 6E
	   67 65 21 20 4E
	   75 6D 62 65 72
	   20 6D 75 73 74
	   20 62 65 20 69
	   6E 20 74 68 65
	   20 72 61 6E 67
	   65 20 5B 2D 31
	   30 30 2C 20 2D
	   31 5D 2E 20 00
 00000210 59 6F 75 20 65	finalCnt_1	BYTE	"You entered ", 0 
	   6E 74 65 72 65
	   64 20 00
 0000021D 20 76 61 6C 69	finalCnt_2	BYTE	" valid numbers. ", 0 
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   20 00
 0000022E 54 68 65 20 73	finalSum	BYTE	"The sum of your valid numbers is ", 0 
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 00000250 54 68 65 20 72	finalAvg	BYTE	"The rounded average is -", 0 
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 2D 00
 00000269 54 68 65 20 61	floatAvg	BYTE	"The average rounded to the nearest thousandth is -", 0 
	   76 65 72 61 67
	   65 20 72 6F 75
	   6E 64 65 64 20
	   74 6F 20 74 68
	   65 20 6E 65 61
	   72 65 73 74 20
	   74 68 6F 75 73
	   61 6E 64 74 68
	   20 69 73 20 2D
	   00
 0000029C 2E 00			point		BYTE	".", 0
 0000029E 00000000		num			DWORD	?
 000002A2 00000000		count		DWORD	?
 000002A6 00000000		sum			DWORD	?
 000002AA 00000000		avg			DWORD	?
 000002AE 00000000		frac		DWORD	?
 000002B2 00000001		lineNum		DWORD	1
 000002B6 000003E8		oneThou		DWORD	1000
 000002BA 54 68 61 6E 6B	goodbye1	BYTE	"Thanks for your time, ", 0	
	   73 20 66 6F 72
	   20 79 6F 75 72
	   20 74 69 6D 65
	   2C 20 00
 000002D1 2E 20 47 6F 6F	goodbye2	BYTE	". Goodbye :D", 0	
	   64 62 79 65 20
	   3A 44 00

 00000000			.code
 00000000			main PROC

				;Program info
 00000000  BA 00000000 R		mov		edx, OFFSET progTitle
 00000005  E8 00000000 E		call	WriteString
 0000000A  E8 00000000 E		call	CrLf

				;Student info
 0000000F  BA 000000C5 R		mov		edx, OFFSET	studentInfo
 00000014  E8 00000000 E		call	WriteString
 00000019  E8 00000000 E		call	CrLf
 0000001E  E8 00000000 E		call	CrLf

				;Extra Credit Info
 00000023  BA 00000037 R		mov		edx, OFFSET ec1
 00000028  E8 00000000 E		call	WriteString
 0000002D  E8 00000000 E		call	CrLf	
 00000032  BA 00000063 R		mov		edx, OFFSET ec2
 00000037  E8 00000000 E		call	WriteString
 0000003C  E8 00000000 E		call	CrLf	
 00000041  E8 00000000 E		call	CrLf

				;Get user name
 00000046  BA 000000F9 R		mov		edx, OFFSET prompt_1
 0000004B  E8 00000000 E		call	WriteString
 00000050  BA 0000010C R		mov		edx, OFFSET userName
 00000055  B9 00000020			mov		ecx, 32
 0000005A  E8 00000000 E		call	ReadString
 0000005F  BA 0000012D R		mov		edx, OFFSET intro_1
 00000064  E8 00000000 E		call	WriteString
 00000069  BA 0000010C R		mov		edx, OFFSET userName
 0000006E  E8 00000000 E		call	WriteString
 00000073  BA 00000135 R		mov		edx, OFFSET intro_2
 00000078  E8 00000000 E		call	WriteString
 0000007D  E8 00000000 E		call	CrLf
 00000082  E8 00000000 E		call	CrLf

				;Program Instructions
 00000087  BA 00000138 R		mov		edx, OFFSET progInst_1
 0000008C  E8 00000000 E		call	WriteString
 00000091  E8 00000000 E		call	CrLf
 00000096  BA 00000147 R		mov		edx, OFFSET progInst_2
 0000009B  E8 00000000 E		call	WriteString
 000000A0  E8 00000000 E		call	CrLf
 000000A5  BA 0000016F R		mov		edx, OFFSET progInst_3
 000000AA  E8 00000000 E		call	WriteString
 000000AF  E8 00000000 E		call	CrLf
 000000B4  E8 00000000 E		call	CrLf
 000000B9  EB 14			jmp		GetNum

				;Display out of range message
 000000BB			OutOR:
 000000BB  BA 000001D9 R		mov		edx, OFFSET outOfRange
 000000C0  E8 00000000 E		call	WriteString
 000000C5  E8 00000000 E		call	CrLf
 000000CA  E8 00000000 E		call	CrLf

				;Get user number
 000000CF			GetNum:
 000000CF  A1 000002B2 R		mov		eax, lineNum
 000000D4  E8 00000000 E		call	WriteDec
 000000D9  BA 000001C8 R		mov		edx, OFFSET progInst_4
 000000DE  E8 00000000 E		call	WriteString
 000000E3  E8 00000000 E		call	ReadInt

				;Validate if number is positive
 000000E8  83 F8 FF			cmp		eax, UP_LIMIT
 000000EB  7F 19			jg		Ender

				;Validate the number is in range
 000000ED  83 F8 9C			cmp		eax, LOW_LIMIT
 000000F0  72 C9			jb		OutOR

				;If the number is valid, add to count and sum
 000000F2  01 05 000002A6 R		add		sum, eax
 000000F8  FF 05 000002A2 R		inc		count
 000000FE  FF 05 000002B2 R		inc		lineNum

				;Get next number
 00000104  EB C9			jmp		getNum

 00000106			Ender:

				;Display the count
 00000106  E8 00000000 E		call	CrLf
 0000010B  BA 00000210 R		mov		edx, OFFSET finalCnt_1
 00000110  E8 00000000 E		call	WriteString
 00000115  A1 000002A2 R		mov		eax, count
 0000011A  E8 00000000 E		call	WriteDec
 0000011F  BA 0000021D R		mov		edx, OFFSET finalCnt_2
 00000124  E8 00000000 E		call	WriteString
 00000129  E8 00000000 E		call	CrLf

				;Display the sum
 0000012E  BA 0000022E R		mov		edx, OFFSET finalSum
 00000133  E8 00000000 E		call	WriteString
 00000138  A1 000002A6 R		mov		eax, sum
 0000013D  E8 00000000 E		call	WriteInt
 00000142  E8 00000000 E		call	CrLf

				;Calculate the average
 00000147  A1 000002A6 R		mov		eax, sum
 0000014C  8B 1D 000002A2 R		mov		ebx, count
 00000152  99				cdq
 00000153  F7 FB			idiv	ebx
 00000155  A3 000002AA R		mov		avg, eax

				;Calculate the fractional
 0000015A  8B C2			mov		eax, edx
 0000015C  F7 D8			neg		eax
 0000015E  F7 25 000002B6 R		mul		oneThou
 00000164  F7 F3			div		ebx
 00000166  A3 000002AE R		mov		frac, eax

				;Round to the nearest thousandth
 0000016B  8B C2			mov		eax, edx
 0000016D  BB 0000000A			mov		ebx, 10
 00000172  F7 E3			mul		ebx
 00000174  8B 1D 000002A2 R		mov		ebx, count
 0000017A  99				cdq
 0000017B  F7 F3			div		ebx
 0000017D  83 F8 05			cmp		eax, 5
 00000180  73 02			jae		RoundUp
 00000182  72 06			jb		NoRound

 00000184			RoundUp:
 00000184  FF 05 000002AE R		inc		frac

 0000018A			NoRound:

				;Display the average
 0000018A  BA 00000250 R		mov		edx, OFFSET finalAvg
 0000018F  E8 00000000 E		call	WriteString
 00000194  F7 1D 000002AA R		neg		avg
 0000019A  A1 000002AA R		mov		eax, avg
 0000019F  E8 00000000 E		call	WriteDec
 000001A4  E8 00000000 E		call	CrLf

				;Display the floating point average
 000001A9  BA 00000269 R		mov		edx, OFFSET floatAvg
 000001AE  E8 00000000 E		call	WriteString
 000001B3  A1 000002AA R		mov		eax, avg
 000001B8  E8 00000000 E		call	WriteDec
 000001BD  BA 0000029C R		mov		edx, OFFSET point
 000001C2  E8 00000000 E		call	WriteString
 000001C7  A1 000002AE R		mov		eax, frac
 000001CC  E8 00000000 E		call	WriteDec
 000001D1  E8 00000000 E		call	CrLf
 000001D6  E8 00000000 E		call	CrLf

				;Say goodbye
 000001DB  BA 000002BA R		mov		edx, OFFSET goodbye1
 000001E0  E8 00000000 E		call	WriteString
 000001E5  BA 0000010C R	mov		edx, OFFSET userName
 000001EA  E8 00000000 E		call	WriteString
 000001EF  BA 000002D1 R		mov		edx, OFFSET goodbye2
 000001F4  E8 00000000 E		call	WriteString
 000001F9  E8 00000000 E		call	CrLf
 000001FE  E8 00000000 E		call	CrLf

					exit	; exit to operating system
 00000203  6A 00	   *	    push   +000000000h
 00000205  E8 00000000 E   *	    call   ExitProcess
 0000020A			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.11.25508.2	    10/23/17 15:31:56
Program #3     (Program3.asm				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000002DE Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000020A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000020A Public STDCALL
  OutOR  . . . . . . . . . . . .	L Near	 000000BB _TEXT	
  GetNum . . . . . . . . . . . .	L Near	 000000CF _TEXT	
  Ender  . . . . . . . . . . . .	L Near	 00000106 _TEXT	
  RoundUp  . . . . . . . . . . .	L Near	 00000184 _TEXT	
  NoRound  . . . . . . . . . . .	L Near	 0000018A _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOW_LIMIT  . . . . . . . . . . .	Number	 -00000064h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UP_LIMIT . . . . . . . . . . . .	Number	 -00000001h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
avg  . . . . . . . . . . . . . .	DWord	 000002AA _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count  . . . . . . . . . . . . .	DWord	 000002A2 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
ec1  . . . . . . . . . . . . . .	Byte	 00000037 _DATA	
ec2  . . . . . . . . . . . . . .	Byte	 00000063 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
finalAvg . . . . . . . . . . . .	Byte	 00000250 _DATA	
finalCnt_1 . . . . . . . . . . .	Byte	 00000210 _DATA	
finalCnt_2 . . . . . . . . . . .	Byte	 0000021D _DATA	
finalSum . . . . . . . . . . . .	Byte	 0000022E _DATA	
floatAvg . . . . . . . . . . . .	Byte	 00000269 _DATA	
frac . . . . . . . . . . . . . .	DWord	 000002AE _DATA	
goodbye1 . . . . . . . . . . . .	Byte	 000002BA _DATA	
goodbye2 . . . . . . . . . . . .	Byte	 000002D1 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
intro_1  . . . . . . . . . . . .	Byte	 0000012D _DATA	
intro_2  . . . . . . . . . . . .	Byte	 00000135 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
lineNum  . . . . . . . . . . . .	DWord	 000002B2 _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
num  . . . . . . . . . . . . . .	DWord	 0000029E _DATA	
oneThou  . . . . . . . . . . . .	DWord	 000002B6 _DATA	
outOfRange . . . . . . . . . . .	Byte	 000001D9 _DATA	
point  . . . . . . . . . . . . .	Byte	 0000029C _DATA	
progInst_1 . . . . . . . . . . .	Byte	 00000138 _DATA	
progInst_2 . . . . . . . . . . .	Byte	 00000147 _DATA	
progInst_3 . . . . . . . . . . .	Byte	 0000016F _DATA	
progInst_4 . . . . . . . . . . .	Byte	 000001C8 _DATA	
progTitle  . . . . . . . . . . .	Byte	 00000000 _DATA	
prompt_1 . . . . . . . . . . . .	Byte	 000000F9 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
studentInfo  . . . . . . . . . .	Byte	 000000C5 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000002A6 _DATA	
userName . . . . . . . . . . . .	Byte	 0000010C _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
